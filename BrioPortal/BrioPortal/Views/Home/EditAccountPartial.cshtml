@model Brio.Models.EditPortalAccount

<div class="content-right-bar account-edit-form" style="display: none">
    <h2>Редактирование аккаунта</h2>
    @using (Html.BeginForm("EditAccount", "Home", FormMethod.Post, new { @class = "acc-form account-edit-form", enctype = "multipart/form-data" }))
    {
        <p>
            @Html.LabelFor(a => a.Name):
            @Html.TextBoxFor(a => a.Name)
        </p>
        <p>
            @Html.LabelFor(a => a.Surname):
            @Html.TextBoxFor(a => a.Surname)
        </p>
        <p>
            @Html.LabelFor(a => a.Patronymic):
            @Html.TextBoxFor(a => a.Patronymic)
        </p>
        <p>
            @Html.LabelFor(a => a.Email):
            @Html.TextBoxFor(a => a.Email)
        </p>
        <p>
            @Html.LabelFor(a => a.Phone):
            @Html.TextBoxFor(a => a.Phone)
        </p>
        <p>
            @Html.LabelFor(a => a.Post):
            @Html.TextBoxFor(a => a.Post)
        </p>
        <p>
            @Html.LabelFor(a => a.AvatarUrl):
            @Html.TextBoxFor(a => a.AvatarUrl, new { type = "file" })
        </p>
        <p>
            @Html.LabelFor(a => a.DivisionId):
            @Html.DropDownListFor(a => a.DivisionId, ViewBag.Divisions as SelectList, "Выберите отдел")
        </p>

        <button class="save-account">
            <h2 class="right creat-title"><span>Сохранить</span></h2>
        </button>
    }
</div>

<script>
    (function () {

        $('button.save-account').click(function (e) {
            e.preventdefault();
            //editAccount();
        });

        function editAcoount() {
            var form = $('form.account-edit-form');
            $.ajax({
                type: 'POST',
                dataType: 'json',
                url: "/InfoCard/EditAccount",
                data: form.serialize(),
                success: function (response) {
                    console.log(response);
                    if (response.IsSuccess) {
                        showResultMessage($('form[name="serch"]'), response.Message, true);
                        showRightBlock();
                    }
                    else {
                        showResultMessage($('form[name="serch"]'), response.Message, false);
                        if (errorCallBack) {
                            errorCallBack();
                        }
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log("request failed");
                    showResultMessage($('form[name="serch"]'), 'Невозможно извлечь карточку сотрудника. Обновите страницу и повторите поытку.', false);
                    if (errorCallBack) {
                        errorCallBack();
                    }
                },
                processData: false,
                async: false
            });
        }
    })();
</script>