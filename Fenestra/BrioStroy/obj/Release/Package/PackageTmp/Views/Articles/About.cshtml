@model IEnumerable<Brio.Models.Article>
@{
    ViewBag.Title = "О КОМПАНИИ";
    Layout = "~/Views/Layouts/LayoutDefault.cshtml";
}

@section styles{
    <style>
        .page_logo {
            background: url('../Content/images/about_company.png') no-repeat 0 0;
            background-size: contain;
        }

         #owl-demo .item img {
            display: block;
            width: 100%;
            height: auto;
        }
        </style>
    } 
<link href="~/Content/css/owl.carousel.css" rel="stylesheet" />
<link href="~/Content/css/owl.theme.css" rel="stylesheet" />

<script src="~/Content/js/owl.carousel.min.js"></script>
<script src="~/Content/js/jquery-ui.min.js"></script>
<script src="~/Content/js/jquery.mousewheel.min.js"></script>
<script src="~/Content/js/knockout-3.2.0.js"></script>

<div class="container run1">
    <div data-id="1" class="slider">
        <div class="units-nav-container">

        </div>
    </div>
</div>

<div class="page_logo_container"><div class="page_logo"></div></div>

@{var i = 0;}
@foreach (var item in Model)
{
    <div class='block_ins @(@i != 0 ? "disp_none" : "current")'>
        @{i++;}
        <div class="title">
            @ViewBag.Title
        </div>
        <article class="page-content">
            <div class="articles">
                @if (User.Identity.IsAuthenticated)
                {
                    <div class="add_button admin_buttons">@Html.ActionLink("Добавить запись", "Add")</div>
                }

                <div class="article_container">
                    <div class="article_header"><h1>@item.Title</h1></div>
                    <div class="article">@Html.Raw(HttpUtility.HtmlDecode(item.Text))</div>
                    @if (User.Identity.IsAuthenticated)
                    {
                        <div class="delete_button admin_buttons">
                            <a href="/Articles/Edit?articleId=@item.ID"><i class=" fa fa-pencil-square-o"></i></a>
                            <a class="delete" href="" data-articleid="@item.ID"><i class="fa fa-times"></i></a>
                        </div>
                    }
                </div>

            </div>
            <div class="brio-tasks">
                <div class="bottom-corner"></div>
            </div>
        </article>
    </div>
}

@if (Model.Count() == 0)
{
    <div class='block_ins current'>
        <div class="title">
            @ViewBag.Title
        </div>
        <article class="page-content">
            <div class="articles">
                @if (User.Identity.IsAuthenticated)
                {
                    <div class="add_button admin_buttons">@Html.ActionLink("Добавить запись", "Add")</div>
                }
                
                <div class="empty_list">На данный момент не добавлено ни одной записи</div>
            </div>
            <div class="brio-tasks">
                <div class="bottom-corner"></div>
            </div>
        </article>
    </div>
}

<div class='block_ins disp_none company_works' id="company_works">
    <div class="title">
        НАШИ РАБОТЫ
    </div>
    <article class="page-content">
        <div></div>
        <div class="articles">
            @if (User.Identity.IsAuthenticated)
            {
                <div class="add_button admin_buttons">@Html.ActionLink("Добавить работу", "AddCompanyWork")</div>
            }

            @if (User.Identity.IsAuthenticated)
            {
                <div class="delete_button admin_buttons works">
                    <a href="" class="edit"><i class="fa fa-pencil-square-o"></i></a>
                    <a class="delete" data-work-id=""><i class="fa fa-times"></i></a>
                </div>
            }

            <div class="article_container disp_none owl-carousel owl-theme" data-bind="foreach: list">
                <div class="item"><img class="work_img" data-bind="attr: { src: ImagesUrl }" /></div>
            </div>
        </div>
        <div class="brio-tasks">
            <div class="veil disp_none">
                <div class="task-title">
                </div>
                <div class="task-container">

                </div>
                <div class="navigation">
                    <div class="left">
                        <div class="arrow"></div>
                        <div class="text">Предыдущая</div>
                    </div>

                    <div class="right">
                        <div class="arrow"></div>
                        <div class="text">Следующая</div>
                    </div>
                </div>
            </div>
        </div>
    </article>
</div>



<div class='block_ins rhombus' style='display: none;'>
    <div class="logo_cont">
        <div class="partner_logo glass_ru"></div>
        <div class="partner_logo glass"></div>
        <div class="partner_logo kraspan"></div>
    </div>
    <div class="logo_cont line2">
        <div class="logo_inner_cont">
            <div class="partner_logo tec"></div>
            <div class="partner_logo schuco"></div>
        </div>

    </div>
</div>

    <div class="bottom_arrows_container">
        <div class="bottom-arrows">
        </div>
    </div>


<script>
    function companyWorksNavigationPanel(works) {
        var self = this;

        this.list = ko.observableArray(works);
        var prevIndex = -1;
        var currentIndex = 0;
        var nextIndex = 1;
        var task = $(".brio-tasks");
        var RIGHT = "right",
            LEFT = "left";
        var isBusy = false;
        

        function rerenderNavigationPanel() {
            console.log("prevIndex: " + prevIndex);
            console.log("currentIndex: " + currentIndex);
            console.log("nextIndex: " + nextIndex);

            if (!self.isExistPrevElement())
                task.find(".left").addClass("block");
            else
                task.find(".left").removeClass("block");

            if (!self.isExistNextElement())
                task.find(".right").addClass("block");
            else
                task.find(".right").removeClass("block");
        };

        function decIndexes() {
            prevIndex--;
            currentIndex--;
            nextIndex--;

            rerenderNavigationPanel();
        };

        function incIndexes() {
            prevIndex++;
            currentIndex++;
            nextIndex++;

            rerenderNavigationPanel();
        };

        function appendCompanyWork(work) {
            task.find(".task-title").text(work.Title);
            task.find(".task-container").text(work.Description);
            $(".admin_buttons").find(".delete").attr("data-work-id", work.Id);
            $(".admin_buttons").find(".edit").attr("href", "/Articles/EditCompanyWork/" + work.Id);
        };

        self.isExistNextElement = function () {
            if (this.list()[nextIndex] !== undefined)
                return true;
            else
                return false;
        };

        self.isExistPrevElement = function () {
            if (this.list()[prevIndex] !== undefined)
                return true;
            else
                return false;
        };

        self.showPrevWork = function (isMoveOwl) {
            if (self.isExistPrevElement()) {
                if (isMoveOwl) {
                    var owl = $(".owl-carousel").data('owlCarousel');
                    owl.prev()
                }
                appendCompanyWork(this.list()[prevIndex]);
                decIndexes();
            }
        };

        self.showCurrentWork = function () {
            console.log(this.list().length)
            if (this.list() !== undefined && this.list().length > 0) {
                $(".article_container").removeClass("disp_none");
                $(".veil").removeClass("disp_none");

                appendCompanyWork(this.list()[currentIndex]);
                rerenderNavigationPanel();
            }
            else {
                $(".delete_button.works").hide();
                $(".article_container").addClass("disp_none");
                $(".veil").addClass("disp_none");
                $(".block_ins.company_works .articles").append('<div class="empty_list">На данный момент не добавлено ни одной работы</div>')
            }
        };

        self.showNextWork = function (isMoveOwl) {
            if (self.isExistNextElement()) {
                if (isMoveOwl) {
                    var owl = $(".owl-carousel").data('owlCarousel');
                    owl.next()
                }
                appendCompanyWork(this.list()[nextIndex]);
                incIndexes();
            }
        };

        self.CurrentIndex = function () {
            return currentIndex;
        };

        self.showCurrentWork();

        $(".brio-tasks .navigation .left").bind("click", function () {
            self.showPrevWork(true);
        });

        $(".brio-tasks .navigation .right").bind("click", function () {
            self.showNextWork(true);
        });

        $(".delete_button.works .delete").bind("click", function (e) {
            console.log("work");
            e.preventDefault();
            var that = this;

            if (!confirm("Вы действительно хотите удалить эту запись?")) {
                return false;
            }
            $.ajax({
                type: 'POST',
                dataType: 'json',
                url: "/Articles/DeleteCompanyWorks",
                data: "id=" + $(that).attr("data-work-id"),
                success: function (response) {
                    if (response.success) {
                        this.list().splice(currentIndex, 1);

                        if (self.isExistPrevElement()) {
                            self.showPrevWork(true);
                        }
                        else if (self.isExistNextElement()) {
                            self.showNextWork(true);
                        }
                        else {
                            self.showCurrentWork();
                        }
                    }
                    else {
                        console.log(response.message);
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log("request failed");
                },

                processData: false,
                async: false
            });
        });
    }

    (function () {
        for(var i = 0; i < $(".block_ins").length; i++){
            if ($(".unit_nav").length == 0){
                $(".units-nav-container").append('<div class="unit_nav"></div>');
            }
            else
            {
                $(".unit_nav").last().before('<div class="unit_nav"></div>');
            }
        }

        $(window).resize(function () {
            showOrHidePageLogo($(".block_ins.current"));
        });
        
        
        var _companyWorks;

        getCompanyWorks(function (response) {
            currentWorkIndex = 0;
            nextWorkIndex = currentWorkIndex + 1;

            if (response.success) {
                if (response.works.length > 0) {
                    _companyWorks = new companyWorksNavigationPanel(response.works);
                    ko.applyBindings(_companyWorks);
                }
                else {
                    $(".delete_button.works").hide();
                    $(".block_ins.company_works .articles").append('<div class="empty_list">На данный момент не добавлено ни одной работы</div>')
                }
            }
            else {
                console.log(response.message);
            }
        });

        $(".unit_nav").css({ "height": (100 / $(".unit_nav").length) - 2 + "%" });
        $(".unit_nav").eq(0).addClass("active");

        $(".delete_button:not(.works) .delete").bind("click", function (e) {
            console.log("notwork");
            e.preventDefault();
            var that = this;

            if (!confirm("Вы действительно хотите удалить эту запись?")) {
                return false;
            }
            $.ajax({
                type: 'POST',
                dataType: 'json',
                url: "/Articles/Delete",
                data: "articleId=" + $(that).attr("data-articleid"),
                success: function (response) {
                    console.log(response);
                    if (response.success) {
                        var isFirstElement = $(".block_ins").index($(".block_ins.current")) == 0;
                        var isLastElement = $(".block_ins").index($(".block_ins.current")) == $(".block_ins").length - 1;
                        var blockToShow = isFirstElement ? $(".block_ins.current").next() : isLastElement ? $(".block_ins.current").prev() : $(".block_ins.current").next();
                        var deletingBlockIndex = $(".block_ins").index($(".block_ins.current"));

                        if ($(".block_ins").length > 1) {
                            toogleBlock($(".block_ins").index(blockToShow), 350, function (activeElementIndex) {
                                if (activeElementIndex !== undefined) {
                                    $(".unit_nav").removeClass("active");
                                    $(".unit_nav").eq(activeElementIndex).addClass("active");

                                    $(".unit_nav").eq(deletingBlockIndex).remove();
                                    $(".unit_nav").css("height", (100 / $(".unit_nav").length) - 2 + "%");


                                    $(".block_ins").eq(deletingBlockIndex).remove();
                                }
                            }, true);
                        }
                        else {
                            $(".unit_nav").eq(deletingBlockIndex).remove();
                            $(".unit_nav").css("height", (100 / $(".unit_nav").length) - 2 + "%");
                            $(".block_ins").eq(deletingBlockIndex).find(".article_container").remove();
                        }
                    }
                    else {
                        console.log(response.message);
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log("request failed");
                },

                processData: false,
                async: false
            });
        });

        

        $(".unit_nav").bind("click", function () {
            toogleBlock($(this).index(), 350, function (activeElementIndex) {
                if (activeElementIndex !== undefined) {
                    $(".unit_nav").removeClass("active");
                    $(".unit_nav").eq(activeElementIndex).addClass("active");
                }
            });
        });


        $(".owl-carousel").owlCarousel({
            navigation: false, // Show next and prev buttons
            pagination: false,
            slideSpeed: 300,
            paginationSpeed: 400,
            singleItem: true,
            afterMove: after,
            startDragging: dragg,
            mouseDrag: false,
            touchDrag: true,
        });

        var isDragg = false;

        function after() {
            if (!isDragg) {
                return;
            }
            
            isDragg = false;
            var owl = $(".owl-carousel").data('owlCarousel');
            console.log(owl.currentItem);
            console.log(_companyWorks.CurrentIndex());
            if (owl.currentItem >= _companyWorks.CurrentIndex()) {
                console.log('next');
                _companyWorks.showNextWork(false);
                return;
            }
            else {
                console.log('prev');
                _companyWorks.showPrevWork(false);
                return;
            }
        }

        function dragg() {
            isDragg = true;
        }
    })();

    

    
</script>
