@model Brio.Models.SendFeedback
@using Brio.Models
@{
    ViewBag.Title = "КОНТАКТЫ";
    Layout = "~/Views/Layouts/LayoutDefault.cshtml";
}

@section Styles{
    <style>
        figure.banner {
            background: url('../Content/images/banner_feed.jpg') no-repeat 0 0;
            background-size: cover;
            position: relative;
        }

        html, body, #map-canvas {
            height: 550px;
            margin: 0px;
            padding: 0px;
        }

        .pure-form{
            margin: 0;
        }

        .pure-g {
            height: 100%;
        }

        .pure-u-md-1-3
        {
            height:100%;
        }
    </style>

}

<figure class="banner">
    <div class="pure-g">
            <section class="pure-u-1 pure-u-md-1-3 relative">
                <div class="feedback-unit">
                    <div class="title_h1 white">ОБРАТНАЯ<br />СВЯЗЬ</div>
                    @using (Html.BeginForm("SendFeedback", "Contact", FormMethod.Post, new { @class = "pure-form", enctype = "multipart/form-data" }))
                    {
                        <fieldset id="feedback_form">
                            @Html.ValidationSummary(true)
                            @Html.TextBoxFor(model => model.Name, new { placeholder = "Имя" })
                            @Html.TextBoxFor(model => model.Email, new { placeholder = "E-mail" })
                            @Html.TextBoxFor(model => model.Phone, new { placeholder = "Телефон" })
                            @Html.TextAreaFor(model => model.Message, 4, 22, new { placeholder = "Текст" })
                            <button class="button-error pure-button feedback">ОТПРАВИТЬ</button>
                        </fieldset>
                    }
                </div>
            </section>
            <section class="pure-u-1 pure-u-md-2-3 relative">
                <div class="fb-result-msg disp-none">
                </div>
            </section>
</div>
    
</figure>

<div class="content">
    <div id="map-canvas"></div>
    <div class="contact_container">
        <h1>
            КОНТАКТЫ
        </h1>
        @{var contacts = ViewBag.Contacts as Company;}
        <address>
            ИНН 1655139446<br />
            КПП 165501001<br />
            <strong>Юридический адрес</strong><br />
            @contacts.Postcode,<br />
            @contacts.Adress<br />
            Тел./факс: @contacts.Phone, <br />
            @contacts.Phone2
        </address>
        
    </div>
</div>

<script src="https://maps.googleapis.com/maps/api/js?v=3.exp"></script>
<script>
    function initialize() {
        var mapOptions = {
            scaleControl: true,
            center: new google.maps.LatLng(55.7817379, 49.1254735),
            zoom: 15,
            disableDefaultUI: true
        };

        var map = new google.maps.Map(document.getElementById('map-canvas'),
            mapOptions);

        var marker = new google.maps.Marker({
            map: map,
            position: map.getCenter()
        });
        var infowindow = new google.maps.InfoWindow();
        infowindow.setContent('Спартаковская ул., 2, Казань, Республика Татарстан');
        google.maps.event.addListener(marker, 'click', function () {
            infowindow.open(map, marker);
        });
    }

    google.maps.event.addDomListener(window, 'load', initialize);

    (function () {
        $(".pure-button.feedback").bind("click", function(event){
            event.preventDefault();
            var that = this;
            var isDataValid = true;
            $(that).parents("#feedback_form").find("input, textarea").each(function () {
                if ($(this).val() == "") {
                    isDataValid = false;
                    $(this).addClass("error");
                }
                else {
                    $(this).removeClass("error");
                }
            });

            if (!validateEmail($("input[name='Email']").val())) {
                isDataValid = false;
                $("#feedback_form input[name='Email']").addClass("error");
            }
            else {
                $("#feedback_form input[name='Email']").removeClass("error");
            }

            if (isDataValid) {
                postFeedback();
            }
        });
    })();

    function validateEmail(email) { 
        var re = /^(([^<>()[\]\\.,;:\s@@\"]+(\.[^<>()[\]\\.,;:\s@@\"]+)*)|(\".+\"))@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
        return re.test(email);
    }

    function postFeedback() {
        $.ajax({
            type: 'POST',
            dataType: 'json',
            url: "/Contact/SendFeedback",
            data: $("#feedback_form").serialize(),
            success: function (response) {
                if (response.success){
                    $("#feedback_form").find("input, textarea").each(function(){
                        $(this).val("");
                    });
                    $(".fb-result-msg").text("Ваше сообщение успешно отправлено :)").fadeIn();
                }
                else {
                    $(".fb-result-msg").text("Что-то пошло не так, повторите через некоторое время еще раз :(").fadeIn();
                }

                $(".pure-button.feedback").attr("disabled", true).text(response.message);
                setTimeout(function(){
                    $(".pure-button.feedback").attr("disabled", false).text("ОТПРАВИТЬ");
                    $(".fb-result-msg").fadeOut();
                }, 3000);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                console.log("request failed");
            },
            processData: false,
            async: false
        });
    }
</script>